UseDeferred
Vert
	in layout(location = 0) vec3 position;
	in layout(location = 1) vec2 texCoord;
	in layout(location = 2) vec3 normal;
	in layout(location = 3) mat4 iM;
	
	out vec2 uv;
	out vec3 n;
	out vec3 wpos;
	out vec3 cpos;
	
	uniform mat4 M;
	uniform mat4 V;
	uniform mat4 P;

	uniform bool instanced;
	
	void main() {
		wpos = vec3((instanced ? iM : M) * vec4(position, 1));
		cpos = vec3(V * vec4(wpos, 1));
		gl_Position = P * vec4(cpos, 1);
		uv = vec2(texCoord.x, 1.0 - texCoord.y);
		n = normalize(vec3((instanced ? iM : M) * vec4(normalize(normal), 0)));
	}
EndVert
Frag
	layout(early_fragment_tests) in;

	uniform sampler2D t;
	uniform sampler2D spec;
	
	in vec2 uv;
	in vec3 n;
	in vec3 wpos;
	in vec3 cpos;
	
	out layout(location=0) vec4 color;			//RGB A=specular
	out layout(location=1) vec4 normal;			//normal, misc
	
	void main(){
		float ref = .1;
		if(textureSize(spec, 0).x > 0){
			ref = texture(spec, uv).r;
		 }
		float misc = 0;
		vec3 col = texture(t, uv).rgb;
		color = vec4(col, ref);
		normal = vec4(n/2.0+0.5, misc);
	}
EndFrag
